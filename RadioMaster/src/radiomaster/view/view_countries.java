/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package radiomaster.view;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import radiomaster.model.model_countries;
import radiomaster.restful.Response;

/**
 *
 * @author Ema
 */
public class view_countries extends javax.swing.JFrame {

    /**
     * Creates new form view_categories
     */
    JMenuBar menuBar;
    JMenuItem menuItem;
    JMenu menu;
    ArrayList<String> list;
  

    public view_countries() {
        initComponents();

        //Create the menu bar.
        menuBar = new JMenuBar();
        list = new ArrayList<>();
     

        //Build the first menu.
        menu = new JMenu("Countries");
        menuBar.add(menu);
        menu.setMnemonic(KeyEvent.VK_A);

        URL radiomaster;
        //paziti pa postaviti header
        try {
            radiomaster = new URL("http://radiomaster.gaussx.com/web/app_dev.php/api/countries/list");

            HttpURLConnection yc = (HttpURLConnection) radiomaster.openConnection();
            //provjeriti kasnije ima li header
            BufferedReader in = new BufferedReader(
                    new InputStreamReader(
                            yc.getInputStream()));
            String inputLine;
            StringBuffer sBuffer = new StringBuffer();

            while ((inputLine = in.readLine()) != null) {
                sBuffer.append(inputLine);
            }

            in.close();

            //System.out.println(sBuffer);
            java.lang.reflect.Type tip = new TypeToken<Response<model_countries>>() {
            }.getType();

            Response<model_countries> odgovor = new Gson().fromJson(sBuffer.toString(), tip);

             for (model_countries item : odgovor.getContent()) {
                System.out.println("item title: " + item.getName());
               
            }
            

        } catch (MalformedURLException ex) {
            Logger.getLogger(view_countries.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(view_countries.class.getName()).log(Level.SEVERE, null, ex);
        }
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jmCountries = new javax.swing.JMenu();
        jmCategories = new javax.swing.JMenu();
        jmStations = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jmCountries.setText("Countries");
        jmCountries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCountriesActionPerformed(evt);
            }
        });
        jMenuBar1.add(jmCountries);

        jmCategories.setText("Categories");
        jMenuBar1.add(jmCategories);

        jmStations.setText("Stations");
        jMenuBar1.add(jmStations);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmCountriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCountriesActionPerformed
            for (int i = 0; i < list.size(); i++) {
            String item = list.get(i);
            menuItem.add(item, this);
            menu.add(menuItem); 
        }
    }//GEN-LAST:event_jmCountriesActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jmCategories;
    private javax.swing.JMenu jmCountries;
    private javax.swing.JMenu jmStations;
    // End of variables declaration//GEN-END:variables
}
